// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jest-auto-snapshots > NavBar Matches snapshot when array prop "helpMenuItems" has one item: "[object Object]" 1`] = `
<ForwardRef(styled.nav)>
  <ForwardRef(styled.div)>
    <ForwardRef(Styled(Link))
      href="#main"
    >
      Skip to main content
    </ForwardRef(Styled(Link))>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProducts
      activeProduct="publish"
      products={
        Array [
          Object {
            "href": "jest-auto-snapshots String Fixture",
            "id": "jest-auto-snapshots String Fixture",
            "isNew": true,
          },
        ]
      }
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.div)>
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "component": <NodeFixture />,
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
    <ForwardRef(styled.div) />
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
  </ForwardRef(styled.div)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when array prop "helpMenuItems" is an empty array: "[]" 1`] = `
<ForwardRef(styled.nav)>
  <ForwardRef(styled.div)>
    <ForwardRef(Styled(Link))
      href="#main"
    >
      Skip to main content
    </ForwardRef(Styled(Link))>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProducts
      activeProduct="publish"
      products={
        Array [
          Object {
            "href": "jest-auto-snapshots String Fixture",
            "id": "jest-auto-snapshots String Fixture",
            "isNew": true,
          },
        ]
      }
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.div)>
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={Array []}
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
    <ForwardRef(styled.div) />
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
  </ForwardRef(styled.div)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when array prop "products" has one item: "[object Object]" 1`] = `
<ForwardRef(styled.nav)>
  <ForwardRef(styled.div)>
    <ForwardRef(Styled(Link))
      href="#main"
    >
      Skip to main content
    </ForwardRef(Styled(Link))>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProducts
      activeProduct="publish"
      products={
        Array [
          Object {
            "href": "jest-auto-snapshots String Fixture",
            "id": "jest-auto-snapshots String Fixture",
            "isNew": true,
          },
        ]
      }
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.div)>
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "component": <NodeFixture />,
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
    <ForwardRef(styled.div) />
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
  </ForwardRef(styled.div)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when array prop "products" is an empty array: "[]" 1`] = `
<ForwardRef(styled.nav)>
  <ForwardRef(styled.div)>
    <ForwardRef(Styled(Link))
      href="#main"
    >
      Skip to main content
    </ForwardRef(Styled(Link))>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProducts
      activeProduct="publish"
      products={Array []}
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.div)>
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "component": <NodeFixture />,
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
    <ForwardRef(styled.div) />
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
  </ForwardRef(styled.div)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when boolean prop "displaySkipLink" is set to: "false" 1`] = `
<ForwardRef(styled.nav)>
  <ForwardRef(styled.div)>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProducts
      activeProduct="publish"
      products={
        Array [
          Object {
            "href": "jest-auto-snapshots String Fixture",
            "id": "jest-auto-snapshots String Fixture",
            "isNew": true,
          },
        ]
      }
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.div)>
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "component": <NodeFixture />,
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
    <ForwardRef(styled.div) />
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
  </ForwardRef(styled.div)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when passed all props 1`] = `
<ForwardRef(styled.nav)>
  <ForwardRef(styled.div)>
    <ForwardRef(Styled(Link))
      href="#main"
    >
      Skip to main content
    </ForwardRef(Styled(Link))>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProducts
      activeProduct="publish"
      products={
        Array [
          Object {
            "href": "jest-auto-snapshots String Fixture",
            "id": "jest-auto-snapshots String Fixture",
            "isNew": true,
          },
        ]
      }
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.div)>
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "component": <NodeFixture />,
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
    <ForwardRef(styled.div) />
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
  </ForwardRef(styled.div)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when passed only required props 1`] = `
<ForwardRef(styled.nav)>
  <ForwardRef(styled.div)>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProducts
      products={Array []}
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.div)>
    <ForwardRef(styled.div) />
    <Select
      capitalizeItemLabel={false}
      customButton={[Function]}
      hasCustomAction={false}
      hasIconOnly={false}
      hideSearch={true}
      horizontalOffset="-16px"
      isInputSearch={false}
      isOpen={false}
      isSplit={false}
      items={
        Array [
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      label=""
      multiSelect={false}
      noResultsCustomMessage="No matches found"
      onSelectClick={[Function]}
      searchPlaceholder="Search"
      selectPopupVisible={false}
      shortcutsEnabled={true}
      size="medium"
      type="secondary"
      xPosition="right"
      yPosition="bottom"
    />
  </ForwardRef(styled.div)>
</ForwardRef(styled.nav)>
`;
