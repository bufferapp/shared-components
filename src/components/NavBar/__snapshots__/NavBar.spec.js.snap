// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jest-auto-snapshots > NavBar Matches snapshot when array prop "helpMenuItems" has one item: "[object Object]" 1`] = `
<ForwardRef(styled.nav)
  aria-label="Main menu"
>
  <ForwardRef(styled.div)>
    <ForwardRef(Styled(Link))
      href="#main"
    >
      Skip to main content
    </ForwardRef(Styled(Link))>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProduct
      activeProduct="publish"
      products={
        Array [
          "publish",
        ]
      }
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.nav)>
    <DropdownMenu
      ariaLabel="Help Menu"
      ariaLabelPopup="Help"
      items={
        Array [
          Object {
            "component": <NodeFixture />,
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ]
      }
      menubarItem={
        <ForwardRef(styled.a)
          onClick={[Function]}
        >
          <InfoIcon />
          <ForwardRef(styled.span)>
            Help
          </ForwardRef(styled.span)>
        </ForwardRef(styled.a)>
      }
    />
    <ForwardRef(styled.div) />
    <DropdownMenu
      ariaLabel="Account Menu"
      ariaLabelPopup="Account"
      horizontalOffset="-16px"
      items={
        Array [
          Object {
            "header": "jest-auto-snapshots String Fixture",
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "selected": true,
            "title": "jest-auto-snapshots String Fixture",
            "type": "org_switcher",
          },
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      menubarItem={
        <NavBarMenu
          onClick={[Function]}
          user={
            Object {
              "avatar": "jest-auto-snapshots String Fixture",
              "email": "jest-auto-snapshots String Fixture",
              "ignoreMenuItems": Array [
                "jest-auto-snapshots String Fixture",
              ],
              "menuItems": Array [
                Object {
                  "component": [MockFunction],
                  "hasDivider": true,
                  "id": "jest-auto-snapshots String Fixture",
                  "onItemClick": [MockFunction],
                  "title": "jest-auto-snapshots String Fixture",
                },
              ],
              "name": "jest-auto-snapshots String Fixture",
            }
          }
        />
      }
    />
  </ForwardRef(styled.nav)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when array prop "helpMenuItems" is an empty array: "[]" 1`] = `
<ForwardRef(styled.nav)
  aria-label="Main menu"
>
  <ForwardRef(styled.div)>
    <ForwardRef(Styled(Link))
      href="#main"
    >
      Skip to main content
    </ForwardRef(Styled(Link))>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProduct
      activeProduct="publish"
      products={
        Array [
          "publish",
        ]
      }
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.nav)>
    <DropdownMenu
      ariaLabel="Help Menu"
      ariaLabelPopup="Help"
      items={Array []}
      menubarItem={
        <ForwardRef(styled.a)
          onClick={[Function]}
        >
          <InfoIcon />
          <ForwardRef(styled.span)>
            Help
          </ForwardRef(styled.span)>
        </ForwardRef(styled.a)>
      }
    />
    <ForwardRef(styled.div) />
    <DropdownMenu
      ariaLabel="Account Menu"
      ariaLabelPopup="Account"
      horizontalOffset="-16px"
      items={
        Array [
          Object {
            "header": "jest-auto-snapshots String Fixture",
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "selected": true,
            "title": "jest-auto-snapshots String Fixture",
            "type": "org_switcher",
          },
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      menubarItem={
        <NavBarMenu
          onClick={[Function]}
          user={
            Object {
              "avatar": "jest-auto-snapshots String Fixture",
              "email": "jest-auto-snapshots String Fixture",
              "ignoreMenuItems": Array [
                "jest-auto-snapshots String Fixture",
              ],
              "menuItems": Array [
                Object {
                  "component": [MockFunction],
                  "hasDivider": true,
                  "id": "jest-auto-snapshots String Fixture",
                  "onItemClick": [MockFunction],
                  "title": "jest-auto-snapshots String Fixture",
                },
              ],
              "name": "jest-auto-snapshots String Fixture",
            }
          }
        />
      }
    />
  </ForwardRef(styled.nav)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when array prop "products" has one item: "publish" 1`] = `
<ForwardRef(styled.nav)
  aria-label="Main menu"
>
  <ForwardRef(styled.div)>
    <ForwardRef(Styled(Link))
      href="#main"
    >
      Skip to main content
    </ForwardRef(Styled(Link))>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProduct
      activeProduct="publish"
      products={
        Array [
          "publish",
        ]
      }
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.nav)>
    <DropdownMenu
      ariaLabel="Help Menu"
      ariaLabelPopup="Help"
      items={
        Array [
          Object {
            "component": <NodeFixture />,
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ]
      }
      menubarItem={
        <ForwardRef(styled.a)
          onClick={[Function]}
        >
          <InfoIcon />
          <ForwardRef(styled.span)>
            Help
          </ForwardRef(styled.span)>
        </ForwardRef(styled.a)>
      }
    />
    <ForwardRef(styled.div) />
    <DropdownMenu
      ariaLabel="Account Menu"
      ariaLabelPopup="Account"
      horizontalOffset="-16px"
      items={
        Array [
          Object {
            "header": "jest-auto-snapshots String Fixture",
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "selected": true,
            "title": "jest-auto-snapshots String Fixture",
            "type": "org_switcher",
          },
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      menubarItem={
        <NavBarMenu
          onClick={[Function]}
          user={
            Object {
              "avatar": "jest-auto-snapshots String Fixture",
              "email": "jest-auto-snapshots String Fixture",
              "ignoreMenuItems": Array [
                "jest-auto-snapshots String Fixture",
              ],
              "menuItems": Array [
                Object {
                  "component": [MockFunction],
                  "hasDivider": true,
                  "id": "jest-auto-snapshots String Fixture",
                  "onItemClick": [MockFunction],
                  "title": "jest-auto-snapshots String Fixture",
                },
              ],
              "name": "jest-auto-snapshots String Fixture",
            }
          }
        />
      }
    />
  </ForwardRef(styled.nav)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when array prop "products" is an empty array: "[]" 1`] = `
<ForwardRef(styled.nav)
  aria-label="Main menu"
>
  <ForwardRef(styled.div)>
    <ForwardRef(Styled(Link))
      href="#main"
    >
      Skip to main content
    </ForwardRef(Styled(Link))>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProduct
      activeProduct="publish"
      products={Array []}
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.nav)>
    <DropdownMenu
      ariaLabel="Help Menu"
      ariaLabelPopup="Help"
      items={
        Array [
          Object {
            "component": <NodeFixture />,
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ]
      }
      menubarItem={
        <ForwardRef(styled.a)
          onClick={[Function]}
        >
          <InfoIcon />
          <ForwardRef(styled.span)>
            Help
          </ForwardRef(styled.span)>
        </ForwardRef(styled.a)>
      }
    />
    <ForwardRef(styled.div) />
    <DropdownMenu
      ariaLabel="Account Menu"
      ariaLabelPopup="Account"
      horizontalOffset="-16px"
      items={
        Array [
          Object {
            "header": "jest-auto-snapshots String Fixture",
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "selected": true,
            "title": "jest-auto-snapshots String Fixture",
            "type": "org_switcher",
          },
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      menubarItem={
        <NavBarMenu
          onClick={[Function]}
          user={
            Object {
              "avatar": "jest-auto-snapshots String Fixture",
              "email": "jest-auto-snapshots String Fixture",
              "ignoreMenuItems": Array [
                "jest-auto-snapshots String Fixture",
              ],
              "menuItems": Array [
                Object {
                  "component": [MockFunction],
                  "hasDivider": true,
                  "id": "jest-auto-snapshots String Fixture",
                  "onItemClick": [MockFunction],
                  "title": "jest-auto-snapshots String Fixture",
                },
              ],
              "name": "jest-auto-snapshots String Fixture",
            }
          }
        />
      }
    />
  </ForwardRef(styled.nav)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when boolean prop "displaySkipLink" is set to: "false" 1`] = `
<ForwardRef(styled.nav)
  aria-label="Main menu"
>
  <ForwardRef(styled.div)>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProduct
      activeProduct="publish"
      products={
        Array [
          "publish",
        ]
      }
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.nav)>
    <DropdownMenu
      ariaLabel="Help Menu"
      ariaLabelPopup="Help"
      items={
        Array [
          Object {
            "component": <NodeFixture />,
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ]
      }
      menubarItem={
        <ForwardRef(styled.a)
          onClick={[Function]}
        >
          <InfoIcon />
          <ForwardRef(styled.span)>
            Help
          </ForwardRef(styled.span)>
        </ForwardRef(styled.a)>
      }
    />
    <ForwardRef(styled.div) />
    <DropdownMenu
      ariaLabel="Account Menu"
      ariaLabelPopup="Account"
      horizontalOffset="-16px"
      items={
        Array [
          Object {
            "header": "jest-auto-snapshots String Fixture",
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "selected": true,
            "title": "jest-auto-snapshots String Fixture",
            "type": "org_switcher",
          },
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      menubarItem={
        <NavBarMenu
          onClick={[Function]}
          user={
            Object {
              "avatar": "jest-auto-snapshots String Fixture",
              "email": "jest-auto-snapshots String Fixture",
              "ignoreMenuItems": Array [
                "jest-auto-snapshots String Fixture",
              ],
              "menuItems": Array [
                Object {
                  "component": [MockFunction],
                  "hasDivider": true,
                  "id": "jest-auto-snapshots String Fixture",
                  "onItemClick": [MockFunction],
                  "title": "jest-auto-snapshots String Fixture",
                },
              ],
              "name": "jest-auto-snapshots String Fixture",
            }
          }
        />
      }
    />
  </ForwardRef(styled.nav)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when passed all props 1`] = `
<ForwardRef(styled.nav)
  aria-label="Main menu"
>
  <ForwardRef(styled.div)>
    <ForwardRef(Styled(Link))
      href="#main"
    >
      Skip to main content
    </ForwardRef(Styled(Link))>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProduct
      activeProduct="publish"
      products={
        Array [
          "publish",
        ]
      }
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.nav)>
    <DropdownMenu
      ariaLabel="Help Menu"
      ariaLabelPopup="Help"
      items={
        Array [
          Object {
            "component": <NodeFixture />,
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ]
      }
      menubarItem={
        <ForwardRef(styled.a)
          onClick={[Function]}
        >
          <InfoIcon />
          <ForwardRef(styled.span)>
            Help
          </ForwardRef(styled.span)>
        </ForwardRef(styled.a)>
      }
    />
    <ForwardRef(styled.div) />
    <DropdownMenu
      ariaLabel="Account Menu"
      ariaLabelPopup="Account"
      horizontalOffset="-16px"
      items={
        Array [
          Object {
            "header": "jest-auto-snapshots String Fixture",
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "selected": true,
            "title": "jest-auto-snapshots String Fixture",
            "type": "org_switcher",
          },
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      menubarItem={
        <NavBarMenu
          onClick={[Function]}
          user={
            Object {
              "avatar": "jest-auto-snapshots String Fixture",
              "email": "jest-auto-snapshots String Fixture",
              "ignoreMenuItems": Array [
                "jest-auto-snapshots String Fixture",
              ],
              "menuItems": Array [
                Object {
                  "component": [MockFunction],
                  "hasDivider": true,
                  "id": "jest-auto-snapshots String Fixture",
                  "onItemClick": [MockFunction],
                  "title": "jest-auto-snapshots String Fixture",
                },
              ],
              "name": "jest-auto-snapshots String Fixture",
            }
          }
        />
      }
    />
  </ForwardRef(styled.nav)>
</ForwardRef(styled.nav)>
`;

exports[`jest-auto-snapshots > NavBar Matches snapshot when passed only required props 1`] = `
<ForwardRef(styled.nav)
  aria-label="Main menu"
>
  <ForwardRef(styled.div)>
    <BufferLogo />
    <ForwardRef(styled.div) />
    <NavBarProduct
      products={Array []}
    />
  </ForwardRef(styled.div)>
  <ForwardRef(styled.nav)>
    <ForwardRef(styled.div) />
    <DropdownMenu
      ariaLabel="Account Menu"
      ariaLabelPopup="Account"
      horizontalOffset="-16px"
      items={
        Array [
          Object {
            "icon": <PersonIcon
              color="#B8B8B8"
            />,
            "id": "account",
            "onItemClick": [Function],
            "title": "Account",
          },
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
          Object {
            "hasDivider": true,
            "icon": <ArrowLeftIcon
              color="#B8B8B8"
            />,
            "id": "logout",
            "onItemClick": [Function],
            "title": "Logout",
          },
        ]
      }
      menubarItem={
        <NavBarMenu
          onClick={[Function]}
          user={
            Object {
              "avatar": "jest-auto-snapshots String Fixture",
              "email": "jest-auto-snapshots String Fixture",
              "ignoreMenuItems": Array [
                "jest-auto-snapshots String Fixture",
              ],
              "menuItems": Array [
                Object {
                  "component": [MockFunction],
                  "hasDivider": true,
                  "id": "jest-auto-snapshots String Fixture",
                  "onItemClick": [MockFunction],
                  "title": "jest-auto-snapshots String Fixture",
                },
              ],
              "name": "jest-auto-snapshots String Fixture",
            }
          }
        />
      }
    />
  </ForwardRef(styled.nav)>
</ForwardRef(styled.nav)>
`;
