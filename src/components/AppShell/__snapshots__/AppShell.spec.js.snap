// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jest-auto-snapshots > AppShell Matches snapshot when array prop "helpMenuItems" has one item: "[object Object]" 1`] = `
<ForwardRef(styled.div)>
  <NavBar
    activeProduct="publish"
    helpMenuItems={
      Array [
        Object {
          "component": <NodeFixture />,
          "hasDivider": true,
          "id": "jest-auto-snapshots String Fixture",
          "onItemClick": [MockFunction],
          "title": "jest-auto-snapshots String Fixture",
        },
      ]
    }
    onLogout={[MockFunction]}
    user={
      Object {
        "avatar": "jest-auto-snapshots String Fixture",
        "email": "jest-auto-snapshots String Fixture",
        "ignoreMenuItems": Array [
          "jest-auto-snapshots String Fixture",
        ],
        "menuItems": Array [
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ],
        "name": "jest-auto-snapshots String Fixture",
      }
    }
  />
  <Banner
    actionButton={
      Object {
        "action": [MockFunction],
        "label": "jest-auto-snapshots String Fixture",
      }
    }
    customHTML={
      Object {
        "__html": "jest-auto-snapshots String Fixture",
      }
    }
    onCloseBanner={null}
    text="jest-auto-snapshots String Fixture"
    themeColor="blue"
  />
  <ForwardRef(styled.div)>
    <ForwardRef(styled.div)>
      <NodeFixture />
    </ForwardRef(styled.div)>
    <ForwardRef(styled.div)>
      <NodeFixture />
    </ForwardRef(styled.div)>
  </ForwardRef(styled.div)>
</ForwardRef(styled.div)>
`;

exports[`jest-auto-snapshots > AppShell Matches snapshot when array prop "helpMenuItems" is an empty array: "[]" 1`] = `
<ForwardRef(styled.div)>
  <NavBar
    activeProduct="publish"
    helpMenuItems={Array []}
    onLogout={[MockFunction]}
    user={
      Object {
        "avatar": "jest-auto-snapshots String Fixture",
        "email": "jest-auto-snapshots String Fixture",
        "ignoreMenuItems": Array [
          "jest-auto-snapshots String Fixture",
        ],
        "menuItems": Array [
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ],
        "name": "jest-auto-snapshots String Fixture",
      }
    }
  />
  <Banner
    actionButton={
      Object {
        "action": [MockFunction],
        "label": "jest-auto-snapshots String Fixture",
      }
    }
    customHTML={
      Object {
        "__html": "jest-auto-snapshots String Fixture",
      }
    }
    onCloseBanner={null}
    text="jest-auto-snapshots String Fixture"
    themeColor="blue"
  />
  <ForwardRef(styled.div)>
    <ForwardRef(styled.div)>
      <NodeFixture />
    </ForwardRef(styled.div)>
    <ForwardRef(styled.div)>
      <NodeFixture />
    </ForwardRef(styled.div)>
  </ForwardRef(styled.div)>
</ForwardRef(styled.div)>
`;

exports[`jest-auto-snapshots > AppShell Matches snapshot when passed all props 1`] = `
<ForwardRef(styled.div)>
  <NavBar
    activeProduct="publish"
    helpMenuItems={
      Array [
        Object {
          "component": <NodeFixture />,
          "hasDivider": true,
          "id": "jest-auto-snapshots String Fixture",
          "onItemClick": [MockFunction],
          "title": "jest-auto-snapshots String Fixture",
        },
      ]
    }
    onLogout={[MockFunction]}
    user={
      Object {
        "avatar": "jest-auto-snapshots String Fixture",
        "email": "jest-auto-snapshots String Fixture",
        "ignoreMenuItems": Array [
          "jest-auto-snapshots String Fixture",
        ],
        "menuItems": Array [
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ],
        "name": "jest-auto-snapshots String Fixture",
      }
    }
  />
  <Banner
    actionButton={
      Object {
        "action": [MockFunction],
        "label": "jest-auto-snapshots String Fixture",
      }
    }
    customHTML={
      Object {
        "__html": "jest-auto-snapshots String Fixture",
      }
    }
    onCloseBanner={null}
    text="jest-auto-snapshots String Fixture"
    themeColor="blue"
  />
  <ForwardRef(styled.div)>
    <ForwardRef(styled.div)>
      <NodeFixture />
    </ForwardRef(styled.div)>
    <ForwardRef(styled.div)>
      <NodeFixture />
    </ForwardRef(styled.div)>
  </ForwardRef(styled.div)>
</ForwardRef(styled.div)>
`;

exports[`jest-auto-snapshots > AppShell Matches snapshot when passed only required props 1`] = `
<ForwardRef(styled.div)>
  <NavBar
    helpMenuItems={null}
    user={
      Object {
        "avatar": "jest-auto-snapshots String Fixture",
        "email": "jest-auto-snapshots String Fixture",
        "ignoreMenuItems": Array [
          "jest-auto-snapshots String Fixture",
        ],
        "menuItems": Array [
          Object {
            "component": [MockFunction],
            "hasDivider": true,
            "id": "jest-auto-snapshots String Fixture",
            "onItemClick": [MockFunction],
            "title": "jest-auto-snapshots String Fixture",
          },
        ],
        "name": "jest-auto-snapshots String Fixture",
      }
    }
  />
  <ForwardRef(styled.div)>
    <ForwardRef(styled.div)>
      <NodeFixture />
    </ForwardRef(styled.div)>
  </ForwardRef(styled.div)>
</ForwardRef(styled.div)>
`;
